public class Camera1 : MonoBehaviour {
    #region 单例模式
    private static Camera1 _instance;

    public new static Camera1 Instance
    {
        get
        {
            if (_instance == null)
            {
                _instance = GameObject.FindWithTag("MainCamera").GetComponent<Camera1>();
            }
            return _instance;
        }
    }
    #endregion

    public Transform follow;
    public float m_fDistance = 7.0f;
    public float m_fXSpeed = 100.0f;
    public float m_fYMinLimit = 0.1f;
    public float m_fYMaxLimit = 89.9f;
    private float m_fXRot = 0.0f;
    public float m_fYRot = 40f;
    public float
        speed = 5.0f;

    void Start()
    {
       // follow = follow ? follow : GameObject.Find("Player").transform;
    }

    void LateUpdate()
    {
        m_fDistance -= Input.GetAxis("Mouse ScrollWheel") * 2;
        m_fDistance = Mathf.Clamp(m_fDistance, 1.6f, 10f);
        if (Input.GetMouseButton(1))
        {


            m_fXRot += Input.GetAxis("Mouse X") / 10.0f * m_fXSpeed;
            m_fYRot -= Input.GetAxis("Mouse Y") / 10.0f * m_fXSpeed;
        }
        if (Input.GetMouseButtonDown(1))
        {
            Cursor.lockState = CursorLockMode.Locked;
        }
        if (Input.GetMouseButtonUp(1))
        {
            Cursor.lockState = CursorLockMode.None;
        }
        m_fYRot = Mathf.Clamp(m_fYRot, m_fYMinLimit, m_fYMaxLimit);
        Vector3 negDistance = new Vector3(0f, 0f, -m_fDistance);
        //transform.rotation = Quaternion.Lerp(transform.rotation,Quaternion.Euler(m_fYRot, m_fXRot, 0),Time.deltaTime*speed);
        transform.rotation = Quaternion.Euler(m_fYRot, m_fXRot, 0);
        transform.position = transform.rotation * negDistance + follow.position;
    }

    public void GetTarget(GameObject go)
    {
        follow.position = go.transform.position;
    }
}
